{"version":3,"file":"static/js/290.b9f0258a.chunk.js","mappings":"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","sources":["components/dialogs/utils.js","components/dialogs/components/AppDialogTitle.js","components/dialogs/CommonDialog.js","components/dialogs/MessageDialog.js","components/dialogs/ConfirmationDialog.js","components/dialogs/EmailEditDialog.js","views/components/Dialogs.js","views/components/Links.js","views/components/SnackBars.js","views/About/About.js","views/About/index.js","views/components/Alerts.js","views/components/Buttons.js","views/components/IconButtons.js","components/Tag/Tag.js","components/Tag/TagCloud.js","views/components/Tags.js","views/components/Typography.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n/**\n * PropTypes for \"common\" dialogs\n */\nexport const PropTypesCommonDialog = {\n  open: PropTypes.bool,\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number, PropTypes.bool]),\n  title: PropTypes.string,\n  text: PropTypes.string,\n  body: PropTypes.node,\n  hideCancelButton: PropTypes.bool,\n  confirmButtonText: PropTypes.string,\n  confirmButtonColor: PropTypes.string,\n  onConfirm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { DialogTitle } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { AppIconButton } from '../..';\nimport { dialogStyles } from '../../../utils/style';\n\nconst useStyles = makeStyles((theme) => ({\n  ...dialogStyles(theme),\n}));\n\n/**\n * Renders Material UI Dialog Title with optional (x) button to close the dialog\n * @component AppDialogTitle\n * @param {func} [onClose] - when set the (x) button aded to Dialog Title and event called on button click\n */\nconst AppDialogTitle = ({ children, onClose, ...props }) => {\n  const classes = useStyles();\n  return (\n    <DialogTitle {...props}>\n      {children}\n      {Boolean(onClose) ? (\n        <AppIconButton className={classes.xButton} icon=\"close\" aria-label=\"Close\" title=\"Close\" onClick={onClose} />\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nAppDialogTitle.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default AppDialogTitle;\n","import { useCallback } from 'react';\nimport { PropTypesCommonDialog } from './utils';\nimport { Dialog, DialogActions, DialogContent } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { AppButton } from '..';\nimport { AppDialogTitle } from './components';\nimport { dialogStyles } from '../../utils/style';\n\nconst useStyles = makeStyles((theme) => ({\n  ...dialogStyles(theme),\n}));\n\n/**\n * Shows generic \"Common\" dialog\n * @param {function} props.onConfirm - event for Confirm button, called as onConfirm(data)\n * @param {function} props.onClose - event for Close and Cancel buttons and the backdrop\n */\nconst CommonDialog = ({\n  open = false, // Don't show dialog by default\n  data, // optional data passed to onConfirm callback\n  title = 'Missing title...',\n  text = 'Text is missing...',\n  body, // JSX to render instead of .text\n  hideCancelButton = false,\n  confirmButtonText = 'Confirm',\n  confirmButtonColor = 'primary',\n  onConfirm,\n  onClose,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  const handleOnConfirm = useCallback(() => {\n    if (onConfirm && typeof onConfirm === 'function') {\n      onConfirm(data);\n    }\n  }, [data, onConfirm]);\n\n  return (\n    <Dialog\n      className={classes.root}\n      classes={{ paper: classes.paper }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      {...props}\n    >\n      <AppDialogTitle id=\"form-dialog-title\" onClose={onClose}>\n        {title}\n      </AppDialogTitle>\n      <DialogContent>{body || text}</DialogContent>\n      <DialogActions className={classes.actions}>\n        {!hideCancelButton && <AppButton onClick={onClose}>Cancel</AppButton>}\n        <AppButton onClick={handleOnConfirm} color={confirmButtonColor} mr={0}>\n          {confirmButtonText}\n        </AppButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nCommonDialog.propTypes = PropTypesCommonDialog;\n\nexport default CommonDialog;\n","import { PropTypesCommonDialog } from './utils';\nimport CommonDialog from './CommonDialog';\n\n/**\n * Shows generic \"Message\" dialog\n */\nconst MessageDialog = ({ title = 'Message', confirmButtonText = 'OK', hideCancelButton = true, ...props }) => {\n  return (\n    <CommonDialog title={title} confirmButtonText={confirmButtonText} hideCancelButton={hideCancelButton} {...props} />\n  );\n};\n\nMessageDialog.propTypes = PropTypesCommonDialog;\n\nexport default MessageDialog;\n","import { PropTypesCommonDialog } from './utils';\nimport CommonDialog from './CommonDialog';\n\n/**\n * Shows generic \"Confirmation\" dialog\n */\nconst ConfirmDialog = ({ title = 'Confirm?', confirmButtonText = 'Confirm', ...props }) => {\n  return <CommonDialog title={title} confirmButtonText={confirmButtonText} {...props} />;\n};\n\nConfirmDialog.propTypes = PropTypesCommonDialog;\n\nexport default ConfirmDialog;\n","import { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogActions, DialogContent, TextField } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { AppButton } from '..';\nimport { AppDialogTitle } from './components';\nimport { dialogStyles } from '../../utils/style';\n\nconst useStyles = makeStyles((theme) => ({\n  ...dialogStyles(theme),\n  edit: {\n    margin: 0,\n  },\n}));\n\n/**\n * Shows modal \"Change email\" dialog\n * @param {string} props.email - data object\n * @param {function} props.onConfirm - event for Save/Confirm button\n * @param {function} props.onClose - event for Close and Cancel buttons and the backdrop\n */\nconst EmailEditDialog = ({ email, open = false, title, onConfirm, onClose, ...props }) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(email);\n\n  const handleInputChange = useCallback((event) => setValue(event.target.value), []);\n\n  const handleOnConfirm = () => {\n    if (onConfirm && typeof onConfirm === 'function') onConfirm(value);\n  };\n\n  return (\n    <Dialog\n      className={classes.root}\n      classes={{ paper: classes.paper }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      {...props}\n    >\n      <AppDialogTitle id=\"form-dialog-title\" onClose={onClose}>\n        {title || 'Change email'}\n      </AppDialogTitle>\n      <DialogContent>\n        <TextField\n          className={classes.edit}\n          variant=\"outlined\"\n          autoFocus\n          margin=\"dense\"\n          id=\"email\"\n          label=\"Email Address\"\n          type=\"email\"\n          fullWidth\n          value={value}\n          onChange={handleInputChange}\n        />\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <AppButton onClick={onClose}>Cancel</AppButton>\n        <AppButton onClick={handleOnConfirm} color=\"primary\" mr={0}>\n          Confirm and Save\n        </AppButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nEmailEditDialog.propTypes = {\n  email: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  onConfirm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default EmailEditDialog;\n","import { Component } from 'react';\nimport { Grid } from '@mui/material';\nimport { AppButton } from '../../components';\nimport { AppSection } from '../../components/forms';\nimport { MessageDialog, ConfirmationDialog, EmailEditDialog } from '../../components/dialogs';\nimport TagsSection from './Tags';\n\n/**\n * Renders demo section for Dialogs\n */\nclass DialogsSection extends Component {\n  state = {\n    modal: null,\n    someText: 'Some text to edit',\n    email: 'i@karpolan.com',\n  };\n\n  onDialogClose = (event, reason) => {\n    log.info('DialogsSection.onDialogClose() - reason:', reason || 'buttonClick');\n    this.setState({ modal: null });\n  };\n\n  onMessageDialogOpen = () => {\n    this.setState({\n      modal: (\n        <MessageDialog\n          open\n          data=\"Dialog Data can be object, string, number, boolean, etc. It is passed to onConfirm callback\"\n          title=\"Simple Message\"\n          text={`Use props.text to pass string message here. \n\t\t\t\t\t\tIf you need to render JSX content inside the dialog use props.body. \n\t\t\t\t\t\tText and color of the \"Confirm\" button is customizable.\n\t\t\t\t\t\tThe \"Cancel\" button can be hidden`}\n          onClose={this.onDialogClose}\n          onConfirm={this.onMessageDialogConfirm}\n        />\n      ),\n    });\n  };\n\n  onMessageDialogConfirm = (data) => {\n    log.info('DialogsSection.onMessageDialogConfirm() - data:', data);\n    this.setState({ modal: null });\n  };\n\n  onConfirmDialogOpen = () => {\n    const dialogData = {\n      id: 123,\n      name: 'Sample data for Confirm Dialog',\n    };\n    this.setState({\n      modal: (\n        <ConfirmationDialog\n          open\n          data={dialogData}\n          title=\"Do you really want to do something?\"\n          body={\n            <>\n              <div>JSX content can be easily added into the dialog via props.body</div>\n              <br />\n              <TagsSection useTagCloud />\n              <br />\n              <div>\n                The props.body takes precedence over props.text. So JSX content is rendered, but the text is ignored\n              </div>\n            </>\n          }\n          text=\"!!! This text will not be rendered !!!\"\n          confirmButtonText=\"Confirm and do something\"\n          onClose={this.onDialogClose}\n          onConfirm={this.onConfirmDialogConfirm}\n        />\n      ),\n    });\n  };\n\n  onConfirmDialogConfirm = (data) => {\n    log.info('DialogsSection.onConfirmDialogConfirm() - data:', data);\n    this.setState({ modal: null });\n  };\n\n  onEditEmailDialogOpen = () => {\n    this.setState({\n      modal: (\n        <EmailEditDialog\n          open\n          email={this.state.email}\n          onClose={this.onDialogClose}\n          onConfirm={this.onEditEmailDialogConfirm}\n        />\n      ),\n    });\n  };\n\n  onEditEmailDialogConfirm = (data) => {\n    log.info('DialogsSection.onEditEmailDialogConfirm() - data:', data);\n    this.setState({ modal: null, email: data });\n  };\n\n  render() {\n    const { modal } = this.state;\n    return (\n      <AppSection title=\"Dialogs\" align=\"center\">\n        {modal}\n        <Grid container justifyContent=\"center\">\n          <AppButton ml={0} size=\"small\" label=\"Message\" color=\"default\" onClick={this.onMessageDialogOpen} />\n          <AppButton size=\"small\" label=\"Confirm\" color=\"primary\" onClick={this.onConfirmDialogOpen} />\n          <AppButton mr={0} size=\"small\" label=\"Edit Email\" color=\"secondary\" onClick={this.onEditEmailDialogOpen} />\n        </Grid>\n      </AppSection>\n    );\n  }\n}\n\nexport default DialogsSection;\n","// import { Link } from '@mui/material';\nimport { AppLink, AppButton } from '../../components';\nimport { AppSection } from '../../components/forms';\n\n/**\n * Renders demo section for Link\n */\nconst LinksSection = () => {\n  return (\n    <AppSection title=\"Links\">\n      {/* <Link color=\"inherit\">MUI inherit</Link> <Link color=\"primary\">MUI primary</Link>{' '}\n      <Link color=\"secondary\">MUI secondary</Link> <Link color=\"textPrimary\">MUI textPrimary</Link>{' '}\n      <Link color=\"textSecondary\">MUI textSecondary</Link> <Link color=\"error\">MUI error</Link> <br /> */}\n      <AppLink to=\"/\">Internal AppLink</AppLink> &nbsp;\n      <AppLink to=\"/\" openInNewTab>\n        Internal AppLink in New Tab\n      </AppLink>{' '}\n      &nbsp;\n      <AppLink href=\"//karpolan.com\">External AppLink</AppLink> &nbsp;\n      <AppLink href=\"//karpolan.com\" openInNewTab={false}>\n        External AppLink in Same Tab\n      </AppLink>{' '}\n      &nbsp;\n      <br />\n      <AppLink to=\"/\">\n        <AppButton ml={0} size=\"small\" label=\"as Default Button\" />\n      </AppLink>\n      <AppLink to=\"/\">\n        <AppButton size=\"small\" color=\"primary\" label=\"as Primary Button\" />\n      </AppLink>\n      <AppLink to=\"/\">\n        <AppButton mr={0} size=\"small\" color=\"secondary\" label=\"as Secondary Button\" />\n      </AppLink>\n    </AppSection>\n  );\n};\n\nexport default LinksSection;\n","import { useState } from 'react';\nimport { Grid } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { AppButton } from '../../components';\nimport { AppSection } from '../../components/forms';\nimport { AppSnackBar, AppSnackBarAlert } from '../../components/AppSnackBar';\nimport { APP_SNACKBAR_AUTO_HIDE_DURATION } from '../../components/config';\n\nconst SnakBarsSection = () => {\n  const [snackBars, setSnackBars] = useState({\n    default: true,\n    info: false,\n    success: false,\n    error: false,\n  });\n  const [multiSnackbarCount, setMultiSnackbarCount] = useState(1);\n\n  const { enqueueSnackbar /*, closeSnackbar*/ } = useSnackbar();\n\n  const handleSnackBarShow = (name) => {\n    setSnackBars({ ...snackBars, [name]: true });\n  };\n\n  const handleSnackBarHide = (name) => {\n    setSnackBars({ ...snackBars, [name]: false });\n  };\n\n  const handleMultiSnackbarClick = () => {\n    enqueueSnackbar('Multi SnackBar #' + multiSnackbarCount, {\n      variant: ['info', 'success', 'warning', 'error'][Math.trunc(Math.random() * 4)],\n    });\n    setMultiSnackbarCount((value) => value + 1);\n  };\n\n  return (\n    <AppSection title=\"SnackBars\">\n      <Grid container justifyContent=\"center\">\n        <AppSnackBar\n          key=\"0\"\n          autoHideDuration={5000}\n          open={snackBars.default}\n          message={`This is AppSnackBar, it will disappear in ${APP_SNACKBAR_AUTO_HIDE_DURATION / 1000} seconds`}\n          onClose={() => handleSnackBarHide('default')}\n        />\n\n        <AppButton label=\"Show Info SnackBar\" onClick={() => handleSnackBarShow('info')} />\n        <AppSnackBarAlert\n          open={snackBars.info}\n          message={'AppSnackBarAlert with severity=\"info\"'}\n          severity=\"info\"\n          onClose={() => handleSnackBarHide('info')}\n        />\n\n        <AppButton label=\"Show Success SnackBar\" onClick={() => handleSnackBarShow('success')} />\n        <AppSnackBarAlert\n          key=\"2\"\n          open={snackBars.success}\n          message={'AppSnackBarAlert with severity=\"success\"'}\n          severity=\"success\"\n          onClose={() => handleSnackBarHide('success')}\n        />\n\n        <AppButton label=\"Show Error SnackBar\" onClick={() => handleSnackBarShow('error')} />\n        <AppSnackBarAlert\n          key=\"3\"\n          autoHideDuration={null}\n          open={snackBars.error}\n          message={'AppSnackBarAlert with severity=\"error\" visible until the user clicks [X] button'}\n          severity=\"error\"\n          onClose={() => handleSnackBarHide('error')}\n        />\n\n        <AppButton label=\"Multi SnackBar (Click few times)\" onClick={handleMultiSnackbarClick} />\n      </Grid>\n    </AppSection>\n  );\n};\n\nexport default SnakBarsSection;\n","import { Grid } from '@mui/material';\nimport { AppLink } from '../../components';\nimport { AppSection } from '../../components/forms';\nimport ButtonsSection from '../components/Buttons';\nimport TagsSection from '../components/Tags';\nimport DialogsSection from '../components/Dialogs';\nimport AlertsSection from '../components/Alerts';\nimport LinksSection from '../components/Links';\nimport IconButtonSection from '../components/IconButtons';\nimport TypographySection from '../components/Typography';\nimport SnackBarsSection from '../components/SnackBars';\n\n/**\n * Renders \"About\" page\n * url: /about\n */\nconst About = () => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <AppSection title=\"Application\">\n          <p>\n            This <AppLink href=\"https://reactjs.org/\">React</AppLink> application is built using{' '}\n            <AppLink href=\"https://material-ui.com/\">Material UI</AppLink> components.\n          </p>\n          <p>\n            The project is <AppLink href=\"https://github.com/karpolan/react-mui-pro-starter\">Open Source</AppLink> and\n            contains lots of useful components and utilities.\n          </p>\n          <p>\n            Everyone can use the source code as a{' '}\n            <AppLink href=\"https://github.com/karpolan/react-mui-pro-starter/blob/main/README.md\">\n              starter for new React project\n            </AppLink>\n            . Any{' '}\n            <AppLink href=\"https://github.com/karpolan/react-mui-pro-starter/issues\">comments and suggestions</AppLink>{' '}\n            are welcome :)\n          </p>\n        </AppSection>\n      </Grid>\n\n      <Grid item xs={12}>\n        <ButtonsSection />\n      </Grid>\n\n      <Grid item xs={12} sm={7}>\n        <LinksSection />\n      </Grid>\n\n      <Grid item xs={12} sm={5}>\n        <IconButtonSection />\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <TagsSection />\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <TagsSection useTagCloud />\n      </Grid>\n\n      <Grid item xs={12}>\n        <DialogsSection />\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <AlertsSection />\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <SnackBarsSection />\n      </Grid>\n\n      <Grid item xs={12}>\n        <TypographySection />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default About;\n","import { Route, Routes } from 'react-router-dom';\nimport AboutView from './About';\n\n/**\n * Routes for \"About\" view\n * url: /about/*\n */\nconst AboutRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"*\" element={<AboutView />} />\n    </Routes>\n  );\n};\n\nexport default AboutRoutes;\n","import { AppSection, AppAlert } from '../../components/forms';\n\n/**\n * Renders demo section for Alerts\n */\nconst AlertsSection = () => {\n  const handleAlertClose = (event, reason) => {\n    log.info('handleAlertClose() - event:', event);\n    alert('onClose() called');\n  };\n\n  return (\n    <AppSection title=\"Alerts\">\n      <AppAlert severity=\"error\">severity=\"error\"</AppAlert>\n      <AppAlert severity=\"warning\">severity=\"warning\"</AppAlert>\n      <AppAlert severity=\"info\">severity=\"info\"</AppAlert>\n      <AppAlert severity=\"success\">severity=\"success\"</AppAlert>\n      <AppAlert severity=\"error\" variant=\"standard\" onClose={handleAlertClose}>\n        severity=\"error\" variant=\"standard\"\n      </AppAlert>\n      <AppAlert severity=\"error\" variant=\"outlined\" onClose={handleAlertClose}>\n        severity=\"error\" variant=\"outlined\"\n      </AppAlert>\n      <AppAlert severity=\"error\" variant=\"filled\" onClose={handleAlertClose}>\n        severity=\"error\" variant=\"filled\"\n      </AppAlert>\n    </AppSection>\n  );\n};\n\nexport default AlertsSection;\n","import { useState } from 'react';\nimport { Checkbox, Switch } from '@mui/material';\nimport { AppButton } from '../../components';\nimport { AppSection } from '../../components/forms';\n\n/**\n * Renders demo section for Buttons\n */\nconst ButtonsSection = () => {\n  const [buttonsDisabled, setButtonsDisabled] = useState(false);\n\n  const handleSwitchButtons = () => {\n    setButtonsDisabled(!buttonsDisabled);\n  };\n\n  return (\n    <AppSection title=\"Buttons\">\n      <AppButton label=\"default\" color=\"default\" disabled={buttonsDisabled} />\n      <AppButton label=\"primary\" color=\"primary\" disabled={buttonsDisabled} />\n      <AppButton label=\"secondary\" color=\"secondary\" disabled={buttonsDisabled} />\n      <AppButton label=\"error\" color=\"error\" disabled={buttonsDisabled} />\n      <AppButton label=\"warning\" color=\"warning\" disabled={buttonsDisabled} />\n      <AppButton label=\"info\" color=\"info\" disabled={buttonsDisabled} />\n      <AppButton label=\"success\" color=\"success\" disabled={buttonsDisabled} />\n      <AppButton label=\"small\" color=\"default\" size=\"small\" disabled={buttonsDisabled} />\n      <Checkbox checked={!buttonsDisabled} onChange={handleSwitchButtons} title=\"Enable/Disable buttons\"></Checkbox>\n      <Switch\n        color=\"primary\"\n        title=\"Enable/Disable buttons\"\n        checked={!buttonsDisabled}\n        onChange={handleSwitchButtons}\n      />\n    </AppSection>\n  );\n};\n\nexport default ButtonsSection;\n","import { Divider } from '@mui/material';\nimport { AppIcon, AppIconButton } from '../../components';\nimport { AppSection } from '../../components/forms';\n\n/**\n * Renders demo section for \"Icon Buttons\"\n */\nconst IconButtonSection = () => {\n  return (\n    <AppSection title=\"Icon Buttons\">\n      <AppIconButton title=\"Default icon, no color specified\" />\n      <AppIconButton icon=\"close\" color=\"primary\" title=\"Close icon with Primary color\" />\n      <AppIconButton icon=\"menu\" color=\"secondary\" title=\"Menu icon with Secondary color\" />\n      <AppIconButton icon=\"settings\" color=\"error\" title=\"Settings icon with Error color\" />\n      <AppIconButton icon=\"search\" color=\"warning\" title=\"Search icon with Warning color\" />\n      <AppIconButton icon=\"info\" color=\"info\" title=\"Info icon with Info color\" />\n      <AppIconButton icon=\"home\" color=\"success\" title=\"Home icon with Success color\" />\n      <AppIconButton icon=\"visibilityoff\" color=\"false\" title=\"VisibilityOff icon with False color\" />\n      <AppIconButton icon=\"visibilityon\" color=\"true\" title=\"VisibilityOn icon with True color\" />\n      <AppIconButton icon=\"account\" color=\"inherit\" title=\"Account icon with Inherit color\" />\n      <br /> <br />\n      <Divider />\n      <AppIcon icon=\"close\" color=\"primary\" fontSize=\"large\" />\n      <AppIcon icon=\"menu\" color=\"secondary\" fontSize=\"large\" />\n      <AppIcon icon=\"settings\" color=\"error\" fontSize=\"large\" />\n      <AppIcon icon=\"info\" color=\"disabled\" fontSize=\"large\" />\n      <AppIcon icon=\"close\" color=\"primary\" />\n      <AppIcon icon=\"menu\" color=\"secondary\" />\n      <AppIcon icon=\"settings\" color=\"error\" />\n      <AppIcon icon=\"search\" color=\"action\" />\n      <AppIcon icon=\"info\" color=\"disabled\" />\n      <AppIcon icon=\"home\" color=\"inherit\" />\n      <AppIcon icon=\"close\" color=\"primary\" fontSize=\"small\" />\n      <AppIcon icon=\"menu\" color=\"secondary\" fontSize=\"small\" />\n      <AppIcon icon=\"settings\" color=\"error\" fontSize=\"small\" />\n      <AppIcon icon=\"search\" color=\"action\" fontSize=\"small\" />\n      <AppIcon icon=\"info\" color=\"disabled\" fontSize=\"small\" />\n      <AppIcon icon=\"home\" color=\"inherit\" fontSize=\"small\" />\n    </AppSection>\n  );\n};\n\nexport default IconButtonSection;\n","import PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Chip } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { COLOR_VALUES, filledStylesByNames } from '../../utils/style';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: '1 auto', // Resize chips to fit all area\n    margin: '0.2rem',\n  },\n  // Add \"filled\" styles for Material UI names 'primary', 'secondary', 'warning', and so on\n  ...filledStylesByNames(theme),\n}));\n\n/**\n * Renders Tag (actually MUI Chip) with given text Label styling by MUI Color name\n * @component Tag\n * @param {string} color - name of color from Material UI palette 'primary', 'secondary', 'warning', and so on\n * @param {string} label - text to show in UpperCase, if label is empty nothing is rendered\n */\nconst Tag = ({ label = '', color = 'default', className, onClick, ...props }) => {\n  const classes = useStyles();\n\n  if (!label) return null; // Don't render anything for empty label\n\n  return (\n    <Chip\n      size=\"small\"\n      className={clsx(classes.root, classes[color], className)}\n      label={label.toUpperCase()}\n      onClick={onClick}\n      {...props}\n    />\n  );\n};\n\nTag.propTypes = {\n  color: PropTypes.oneOf(COLOR_VALUES),\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Tag;\n","import PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1, // Without that brakes MUI Grids\n    display: 'flex',\n    flexFlow: 'row wrap',\n    '& div': {\n      flex: '1 auto', // Resize chips to fit all area\n      margin: '0.2rem',\n    },\n  },\n}));\n\n/**\n * Renders all <div> of the children property as \"Tag Cloud\"\n * @component TagCloud\n */\nconst TagCloud = ({ children, className, ...props }) => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\nTagCloud.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nexport default TagCloud;\n","import { AppSection } from '../../components/forms';\nimport { Tag, TagCloud } from '../../components/Tag';\n\n/**\n * Renders demo section for Tags and TagCloud\n */\nconst TagsSection = ({ useTagCloud = false }) => {\n  function renderTags() {\n    return [\n      <Tag key=\"1\" label=\"default\" color=\"default\" />,\n      <Tag key=\"2\" label=\"primary\" color=\"primary\" />,\n      <Tag key=\"3\" label=\"secondary\" color=\"secondary\" />,\n      <Tag key=\"4\" label=\"error\" color=\"error\" />,\n      <Tag key=\"5\" label=\"warning\" color=\"warning\" />,\n      <Tag key=\"6\" label=\"info\" color=\"info\" />,\n      <Tag key=\"7\" label=\"success\" color=\"success\" />,\n    ];\n  }\n\n  return (\n    <AppSection title={useTagCloud ? 'TagCloud' : 'Tags'}>\n      {useTagCloud ? <TagCloud>{renderTags()}</TagCloud> : renderTags()}\n    </AppSection>\n  );\n};\n\nexport default TagsSection;\n","import { Typography, Divider } from '@mui/material';\nimport { AppSection } from '../../components/forms';\n\n/**\n * Renders demo section for MUI Typography\n */\nconst TypographySection = () => {\n  return (\n    <AppSection title=\"Typography\">\n      <Typography variant=\"h1\">MUI Typo h1</Typography>\n      <Typography variant=\"h2\">MUI Typography h2</Typography>\n      <Typography variant=\"h3\">MUI Typography h3</Typography>\n      <Typography variant=\"h4\">MUI Typography h4</Typography>\n      <Typography variant=\"h5\">MUI Typography h5</Typography>\n      <Typography variant=\"h6\">MUI Typography h6</Typography>\n      <Divider />\n      <Typography variant=\"subtitle1\">MUI Typography subtitle1</Typography>\n      <Typography variant=\"subtitle2\">MUI Typography subtitle2</Typography>\n      <Typography variant=\"caption\">MUI Typography caption</Typography>\n      <Divider />\n      <Typography variant=\"body1\">\n        MUI Typography body1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n        ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n        aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n        fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n        anim id est laborum.\n      </Typography>\n      <Divider />\n      <Typography variant=\"body2\">\n        MUI Typography body2 - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n        ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n        aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n        fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n        anim id est laborum.\n      </Typography>\n      <Divider />\n      <Typography variant=\"overline\">MUI Typography overline</Typography>\n      <Divider />\n      <Typography variant=\"button\">MUI Typography button</Typography>\n    </AppSection>\n  );\n};\n\nexport default TypographySection;\n"],"names":["PropTypes","useStyles","makeStyles","theme","dialogStyles","children","onClose","props","classes","DialogTitle","Boolean","className","xButton","icon","title","onClick","open","data","text","body","hideCancelButton","confirmButtonText","confirmButtonColor","onConfirm","handleOnConfirm","useCallback","Dialog","root","paper","id","DialogContent","DialogActions","actions","color","mr","edit","margin","email","useState","value","setValue","handleInputChange","event","target","TextField","variant","autoFocus","label","type","fullWidth","onChange","DialogsSection","state","modal","someText","onDialogClose","reason","log","info","setState","onMessageDialogOpen","onMessageDialogConfirm","onConfirmDialogOpen","ConfirmationDialog","name","Tags","useTagCloud","onConfirmDialogConfirm","onEditEmailDialogOpen","onEditEmailDialogConfirm","this","align","Grid","container","justifyContent","ml","size","Component","to","openInNewTab","href","default","success","error","snackBars","setSnackBars","multiSnackbarCount","setMultiSnackbarCount","enqueueSnackbar","useSnackbar","handleSnackBarShow","handleSnackBarHide","AppSnackBar","autoHideDuration","message","APP_SNACKBAR_AUTO_HIDE_DURATION","severity","Math","trunc","random","spacing","item","xs","Buttons","sm","Links","Dialogs","Alerts","SnackBars","Typography","path","element","handleAlertClose","alert","buttonsDisabled","setButtonsDisabled","handleSwitchButtons","disabled","checked","fontSize","flex","filledStylesByNames","Chip","clsx","toUpperCase","display","flexFlow","renderTags"],"sourceRoot":""}